{"version":3,"sources":["components/Filters/filters.module.css","components/FormPhoneBook/formPhone.module.css","redux/actions.js","apiService.js","redux/selectors.js","components/FormPhoneBook/FormPhoneBook.jsx","redux/operations.js","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filters/Filters.jsx","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactList/contacts.module.css"],"names":["module","exports","addContactsRequests","createAction","addContactsSuccess","addContactsError","deleteContactsRequests","deleteContactsSuccess","deleteContactsError","getContactsRequests","getContactsSuccess","getContactsError","changeFilter","axios","defaults","baseURL","addContactsApi","name","number","id","post","then","data","catch","err","deleteContactsApi","contactId","delete","getContactsFilter","state","contacts","filter","getContactsList","items","FormPhoneBook","useState","setName","setNumber","dispatch","useDispatch","useSelector","uuidv4","onSubmit","a","contactsAdd","addContacts","handleChange","e","currentTarget","value","className","s","form","preventDefault","some","item","toLowerCase","isContactExist","alert","label","input","type","pattern","title","required","onChange","btn","ContactItem","onDeleteContact","onClick","ContactList","useEffect","get","contactsGet","list","includes","map","Filter","target","App","createReducer","_","payload","contact","contactsReducer","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61fad17c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filters_label__pesum\",\"input\":\"filters_input__1q8r8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"formPhone_form__2Rtpg\",\"label\":\"formPhone_label__1IApH\",\"input\":\"formPhone_input__3kseO\",\"btn\":\"formPhone_btn__NOfJ8\",\"title\":\"formPhone_title__ns3Mv\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactsRequests = createAction('contacts/addRequests');\r\nexport const addContactsSuccess = createAction('contacts/addSuccess');\r\nexport const addContactsError = createAction('contacts/addError');\r\n\r\nexport const deleteContactsRequests = createAction('contacts/deleteRequests');\r\nexport const deleteContactsSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactsError = createAction('contacts/deleteError');\r\n\r\nexport const getContactsRequests = createAction('contacts/getRequests');\r\nexport const getContactsSuccess = createAction('contacts/getSuccess');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\nexport const changeFilter = createAction('contacts/FILTER');\r\n","import axios from 'axios';\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const addContactsApi = ({ name, number, id }) => {\r\n  return axios\r\n    .post('/contacts', { name, number, id })\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const getContactsApi = () => {\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n\r\nexport const deleteContactsApi = contactId => {\r\n  return axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(({ data }) => data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n","export const getContactsFilter = state => state.contacts.filter;\r\nexport const getContactsList = state => state.contacts.items;\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport s from './formPhone.module.css';\nimport { addContacts } from '../../redux/operations';\nimport { getContactsList } from '../../redux/selectors';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function FormPhoneBook() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const items = useSelector(getContactsList);\n  const id = uuidv4();\n\n  const onSubmit = () => dispatch(addContacts({ name, number, id }));\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    // Делаем свич\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContactExist = name => {\n      return items.some(item => item.name.toLowerCase() === name.toLowerCase());\n    };\n    isContactExist(name)\n      ? alert(`${name} is already in contacts.`)\n      : onSubmit(name, number);\n    // очистка вместо ресета\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и\n                пробелов. Например Adrian, Jacob Mercer, Charles de Batz de\n                Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add to contacts\n      </button>\n    </form>\n  );\n}\n","import {\r\n  addContactsRequests,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequests,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  getContactsRequests,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n} from './actions';\r\n\r\nimport {\r\n  addContactsApi,\r\n  getContactsApi,\r\n  deleteContactsApi,\r\n} from '../apiService';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(getContactsRequests());\r\n  try {\r\n    const contactsGet = await getContactsApi();\r\n    dispatch(getContactsSuccess(contactsGet));\r\n  } catch (error) {\r\n    dispatch(getContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContacts =\r\n  ({ name, number, id }) =>\r\n  async dispatch => {\r\n    dispatch(addContactsRequests());\r\n    try {\r\n      const contactsAdd = await addContactsApi({ name, number, id });\r\n      dispatch(addContactsSuccess(contactsAdd));\r\n    } catch (error) {\r\n      dispatch(addContactsError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContacts = contactId => async dispatch => {\r\n  dispatch(deleteContactsRequests());\r\n  try {\r\n    await deleteContactsApi(contactId);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error));\r\n  }\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './contacts.module.css';\r\n\r\nexport default function ContactItem({ id, name, number, onDeleteContact }) {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.name}>{name}</span>\r\n      <span className={s.name}>{number}</span>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n","import ContactItem from './ContactItem';\r\nimport s from './contacts.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContacts, fetchContacts } from '../../redux/operations';\r\nimport { getContactsFilter, getContactsList } from '../../redux/selectors';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nexport default function ContactList() {\r\n  const filter = useSelector(getContactsFilter);\r\n  const contacts = useSelector(getContactsList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts\r\n        .filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n        .map(({ name, id, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDeleteContact={() => dispatch(deleteContacts(id))}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport s from './filters.module.css';\r\nimport { changeFilter } from '../../redux/actions';\r\nimport { getContactsFilter } from '../../redux/selectors';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getContactsFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}> Find contacts by name:</label>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import FormPhoneBook from './components/FormPhoneBook/FormPhoneBook.jsx';\nimport ContactList from './components/ContactList/ContactList.jsx';\nimport Filter from './components/Filters/Filters.jsx';\nimport s from './components/FormPhoneBook/formPhone.module.css';\n\nexport default function App() {\n  return (\n    <div>\n      <h1 className={s.title}>Phonebook</h1>\n      <FormPhoneBook />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport {\r\n  addContactsSuccess,\r\n  deleteContactsSuccess,\r\n  getContactsSuccess,\r\n  changeFilter,\r\n} from './actions';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contacts_list__2NYSe\",\"btn\":\"contacts_btn__CSrTu\",\"item\":\"contacts_item__2xIN2\",\"name\":\"contacts_name__1AKET\"};"],"sourceRoot":""}